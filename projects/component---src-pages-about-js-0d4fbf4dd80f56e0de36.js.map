{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/Header.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_Header__WEBPACK_IMPORTED_MODULE_3__","about","a","createElement","title","keywords","headingTitle","className","id","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Navigation","_this","_Component","call","this","toggle","setState","isOpen","state","links","path","react_default","Navbar","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","map","link","NavItem","key","gatsby_browser_entry","to","activeClassName","withPrefix","target","rel","Component","Layout","Fragment","Navigation_Navigation","Date","getFullYear","_755544856","node","Header"],"mappings":"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","file":"component---src-pages-about-js-0d4fbf4dd80f56e0de36.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/Header\"\n\nconst about = () => (\n  <Layout>\n    <SEO title=\"About\" keywords={[`gatsby`, `application`, `react`]} />\n    <Header headingTitle=\"About\" />\n    <div className=\"container\">\n      <h1 className=\"display-4 mt-5\" id=\"skillsHeader\">\n        Skills\n      </h1>\n    </div>\n  </Layout>\n)\nexport default about\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO","import React, { Component } from \"react\"\nimport { Link, withPrefix } from \"gatsby\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from \"reactstrap\"\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n      links: [\n        {\n          id: 0,\n          path: \"/\",\n          name: \"Home\",\n        },\n        {\n          id: 1,\n          path: \"/my-work\",\n          name: \"Projects\",\n        },\n        {\n          id: 2,\n          path: \"/contact\",\n          name: \"Contact\",\n        },\n      ],\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n  render() {\n    return (\n      <Navbar className=\"fixed-top\" expand=\"lg\">\n        <NavbarBrand href=\"/\">\n          <span className=\"branding\">EduardoImery</span>\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {this.state.links.map(link => {\n              return (\n                <NavItem key={link.id}>\n                  <Link\n                    className=\"nav-link\"\n                    to={link.path}\n                    activeClassName=\"active\"\n                  >\n                    {link.name}\n                  </Link>\n                </NavItem>\n              )\n            })}\n            <NavItem>\n              <a\n                className=\"nav-link\"\n                href={withPrefix(\"/Resume.pdf\")}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RESUME\n              </a>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Navigation from './Navigation'\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Navigation />\n          <main>{children}</main>\n          <footer className=\"text-center footer fixed-bottom\">\n            © {new Date().getFullYear()} IW.Develop\n          </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Header(props) {\n  const { headingTitle } = props\n\n  return (\n    <header>\n      <div className=\"container mb-4 mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <h1 className=\"display-4 mb-4 pageHeader\">{headingTitle}</h1>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  headingTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  headingTitle: ``,\n}\n\nexport default Header "],"sourceRoot":""}